LLC   ?= llc
CLANG ?= clang

SRC    := ipftrace.bpf.c
OBJ    := ipftrace.bpf.o
OBJ_LL := ipftrace.bpf.ll
ELF_H  := ipftrace.elf.h

KERNEL   ?= /lib/modules/$(shell uname -r)/build/
ARCH     := $(shell uname -m | sed 's/x86_64/x86/' | sed 's/i386/x86/')

CFLAGS := \
	-g -O3 -Wall -std=gnu99 \
	-I$(ODIR)/include \
	-I$(KERNEL)/arch/$(ARCH)/include/generated/uapi \
	-I$(KERNEL)/arch/$(ARCH)/include/generated \
	-I$(KERNEL)/arch/$(ARCH)/include \
	-I$(KERNEL)/arch/$(ARCH)/include/uapi \
	-I$(KERNEL)/include \
	-I$(KERNEL)/include/uapi \
	-include $(KERNEL)/include/linux/kconfig.h \
	-I$(KERNEL)/include/generated/uapi \
	-S -D__KERNEL__ -D__ASM_SYSREG_H -Wno-unused-value -Wno-pointer-sign \
	-Wno-compare-distinct-pointer-types -Wno-gnu-variable-sized-type-not-at-end \
	-Wno-tautological-compare -Wno-address-of-packed-member -Wno-unused-label \
	-emit-llvm

all: $(ELF_H)

clean:
	$(RM) -f $(ELF_H) $(OBJ) $(OBJ_LL)

$(ELF_H): $(OBJ) | $(ODIR)
	echo "#pragma once" > $(abspath $(ELF_H))
	xxd -i ipftrace.bpf.o >> $(abspath $(ELF_H))

$(OBJ): $(OBJ_LL)
	$(LLC) -march=bpf -filetype=obj -o $@ $(OBJ_LL)

$(OBJ_LL): $(DEPS)
	$(CLANG) $(CFLAGS) -o $@ -c $(SRC)

.PHONY: all clean
